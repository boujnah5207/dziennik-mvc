@model PagedList.IPagedList<Dziennik_MVC.Models.Entities.Przedmioty>

@{
    ViewBag.Title = "Lista przedmiotów";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="pageTitle">
    <h2>Lista przedmiotów</h2>
</div>

<div class="opcje">
    @Html.ActionLink("Dodaj przedmiot", "Add")
</div>

<table>
    <tr>      
        <th>
            @Html.ActionLink("ID przedmiotu", "List", new { sortOrder = ViewBag.IDPrzedmiotuSortParm })

            @if (ViewBag.CurrentSort == "ID Przedmiotu asc")
            {
             @:<div class="sorting">
              @:↑
             @:</div>
            }
            @if (ViewBag.CurrentSort == "ID Przedmiotu desc")
            { 
              @:<div class="sorting">
              @:↓
              @:</div>
            }            
        </th>       
        <th>
            @Html.ActionLink("Nazwa przedmiotu", "List", new { sortOrder = ViewBag.NameSortParm })

            @if (ViewBag.CurrentSort == "Name asc")
            {
             @:<div class="sorting">
              @:↑
             @:</div>
            }
            @if (ViewBag.CurrentSort == "Name desc")
            { 
              @:<div class="sorting">
              @:↓
              @:</div>
            }            
        </th>   
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.id_przedmiotu)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.nazwa_przedmiotu)
        </td>       
        <td>
            @Html.ActionLink("Edytuj", "Edit", new { id = item.id_przedmiotu }) |
            @Html.ActionLink("Usuń", "Delete", new { id = item.id_przedmiotu })
        </td>
    </tr>
}

</table>

<div>
    Strona @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
    z @Model.PageCount
     
    @if (Model.HasPreviousPage)
    {
        @Html.ActionLink("<<", "List", new { page = 1, sortOrder = ViewBag.CurrentSort })
        @Html.Raw(" ");
        @Html.ActionLink("< Poprzednia", "List", new { page = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort })
    }
    else
    {
        @:<<
        @Html.Raw(" ");
        @:< Poprzednia
    }
     
    @if (Model.HasNextPage)
    {
        @Html.ActionLink("Następna >", "List", new { page = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort })
        @Html.Raw(" ");
        @Html.ActionLink(">>", "List", new { page = Model.PageCount, sortOrder = ViewBag.CurrentSort })
    }
    else
    {
        @:Następna >
        @Html.Raw(" ")
        @:>>
    }
</div>
